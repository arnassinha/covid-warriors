{"version":3,"sources":["components/Header/index.jsx","components/Footer/index.jsx","components/SidePanel/index.jsx","components/barChart/BarChart.js","components/InventoryGraphicalPanel/index.jsx","components/InventoryCardPanel/index.jsx","containers/Dashboard.jsx","containers/AddEditInventories.jsx","containers/App.js","serviceWorker.js","index.js","assets/img/grocery.jpg","assets/img/meat.jpg","assets/img/vegetables.jpg","assets/img/medicine.jpg"],"names":["memo","className","id","href","role","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","BarChart","props","items","map","item","index","divWidth","Math","round","currentStock","unitsAdded","progressClass","push","Fragment","key","name","data-tip","join","style","fontSize","Radium","minHeight","unit","notifyWhenUnitReaches","src","Grocery","alt","Vegetables","Meat","Medicine","Dasboard","render","Component","AddEditInventory","addNewRow","newRow","setState","prevState","x","deleteRow","rowIndex","updatedArray","state","splice","editData","field","fieldValue","newItems","scope","n","i","type","aria-label","aria-describedby","value","onChange","e","target","monthly","stock","length","onClick","class","App","path","Dashboard","exact","AddEditInventories","to","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.122a0073.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\nimport './style.css';\r\n\r\nconst Header = () => (\r\n  <nav className=\"inventory-header sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n    <p className=\"header-name\">Home Inventory Management</p>\r\n    <ul className=\"navbar-nav d-none d-md-inline-block form-inline ml-auto mr-0 mr-md-3 my-2 my-md-0\">\r\n      <li className=\"nav-item dropdown\">\r\n        <a className=\"nav-link dropdown-toggle\" id=\"userDropdown\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className=\"fas fa-user fa-fw\"></i></a>\r\n        <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\r\n          <a className=\"dropdown-item\" href=\"/contact-us\">Contact Us</a>\r\n          <a className=\"dropdown-item\" href=\"/login\">Logout</a>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\n\r\nexport default memo(Header);\r\n","import React, { memo } from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"py-4 bg-light mt-auto\">\r\n    <div className=\"container-fluid\">\r\n      <div className=\"d-flex align-items-center justify-content-between small\">\r\n        <div className=\"text-muted\">Copyright </div>\r\n        <div>\r\n          <a href=\"#\">Privacy Policy</a>\r\n                  &middot;\r\n                  <a href=\"#\">Terms &amp; Conditions</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nexport default memo(Footer);\r\n","import React, { memo } from 'react';\r\n\r\nconst SidePanel = () => (\r\n  <div id=\"layoutSidenav_nav\">\r\n    <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\r\n      <div className=\"sb-sidenav-menu\">\r\n        <div className=\"nav\">\r\n          <a className=\"nav-link\" href=\"/dashboard\"\r\n          ><div className=\"sb-nav-link-icon\"><i className=\"fas fa-tachometer-alt\"></i></div>\r\n                      Dashboard</a\r\n          >\r\n          <a className=\"nav-link\" href=\"/about-us\"\r\n          ><div className=\"sb-nav-link-icon\"></div>\r\n                      About Us</a\r\n          >\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n);\r\n\r\nexport default memo(SidePanel);\r\n","import React from 'react';\r\n\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport './BarChart.css';\r\n\r\nconst BarChart = (props) => {\r\n\r\n  const {items} = props;\r\n\r\n  const allItems = items.map((item, index) => {\r\n\r\n    const divWidth = Math.round((item.currentStock / item.unitsAdded * 100) / 10) * 10;\r\n\r\n    const progressClass = [];\r\n\r\n    progressClass.push(`progress-bar-item`);\r\n\r\n    progressClass.push(`width-${divWidth}`);\r\n\r\n    if (divWidth > 0 && divWidth < 33) {\r\n      progressClass.push('red');\r\n    }\r\n\r\n    if (divWidth > 33 && divWidth < 66) {\r\n      progressClass.push('amber');\r\n    }\r\n\r\n    if (divWidth > 66) {\r\n      progressClass.push('green');\r\n    }\r\n  return (\r\n    <React.Fragment key={index}>\r\n      <div className=\"name-of-item\">{item.name}</div>\r\n      <div data-tip={`${item.unitsAdded - item.currentStock} item(s) already consumed`} key={index} className=\"items-parent\">\r\n        <div className={progressClass.join(\" \")}>\r\n          <div data-tip={`${item.currentStock} item(s) available`} style={{ fontSize: '13px' }}>{divWidth}%</div>\r\n        </div>\r\n      </div>\r\n      <ReactTooltip />\r\n    </React.Fragment>\r\n  );\r\n  });\r\n\r\n  return allItems;\r\n}\r\n\r\nexport default BarChart;","import React, { memo } from 'react';\r\n\r\nimport Radium from 'radium';\r\nimport './style.css';\r\nimport BarChart from '../barChart/BarChart';\r\n\r\nconst InventoryGraphicalPanel = () => {\r\n\r\n  const aboutToFinishFoodItems = [\r\n    {\r\n      id: 1,\r\n      name: 'Soya',\r\n      unit: 'pack',\r\n      unitsAdded: 10,\r\n      currentStock: 2,\r\n      notifyWhenUnitReaches: 2\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Sauce',\r\n      unit: 'pack',\r\n      unitsAdded: 10,\r\n      currentStock: .5,\r\n      notifyWhenUnitReaches: 1\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Milk',\r\n      unit: 'pack',\r\n      unitsAdded: 5,\r\n      currentStock: 3,\r\n      notifyWhenUnitReaches: 3\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Dal',\r\n      unit: 'kg',\r\n      unitsAdded: 3,\r\n      currentStock: 1,\r\n      notifyWhenUnitReaches: 1\r\n    }\r\n  ];\r\n\r\n  const aboutToFinishMedicines = [\r\n    {\r\n      id: 10,\r\n      name: 'Paracetamol',\r\n      unit: 'pack',\r\n      unitsAdded: 10,\r\n      currentStock: 9,\r\n      notifyWhenUnitReaches: 2\r\n    },\r\n    {\r\n      id: 12,\r\n      name: 'Decolic',\r\n      unit: 'pack',\r\n      unitsAdded: 10,\r\n      currentStock: .5,\r\n      notifyWhenUnitReaches: 1\r\n    },\r\n    {\r\n      id: 13,\r\n      name: 'Enteroquinol',\r\n      unit: 'pack',\r\n      unitsAdded: 5,\r\n      currentStock: 3,\r\n      notifyWhenUnitReaches: 3\r\n    },\r\n    {\r\n      id: 14,\r\n      name: 'Pantop DSR',\r\n      unit: 'kg',\r\n      unitsAdded: 20,\r\n      currentStock: 20,\r\n      notifyWhenUnitReaches: 1\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"row graph-panel\" style={{ minHeight: '300px' }}>\r\n      <div className=\"col-xl-6\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n            <h3>Food items</h3>\r\n            <BarChart items={aboutToFinishFoodItems} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-xl-6\">\r\n        <div className=\"card\">\r\n          <div className=\"card-body\">\r\n          <h3>Medicines</h3>\r\n            <BarChart items={aboutToFinishMedicines} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>)\r\n}\r\n\r\nexport default memo(Radium(InventoryGraphicalPanel));\r\n","import React, { memo } from 'react';\r\nimport './style.css';\r\n\r\nimport Grocery from '../../assets/img/grocery.jpg';\r\nimport Meat from '../../assets/img/meat.jpg';\r\nimport Vegetables from '../../assets/img/vegetables.jpg';\r\nimport Medicine from '../../assets/img/medicine.jpg';\r\n\r\nconst InventoryCardPanel = () => (\r\n  <div className=\"row inventory-card\">\r\n    <div className=\"col-xl-3 col-md-6\">\r\n      <div className=\"card\">\r\n        <img className=\"card-img-top\" src={Grocery} alt=\"Card image cap\" />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Grocery</h5>\r\n          <p className=\"card-text\">Manage your groceries stock</p>\r\n          <a href=\"/add-edit-inventory\" className=\"btn btn-primary\">Add/ Edit</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"col-xl-3 col-md-6\">\r\n      <div className=\"card\">\r\n        <img className=\"card-img-top\" src={Vegetables} alt=\"Card image cap\" />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Vegetables</h5>\r\n          <p className=\"card-text\">Manage your vegetables stock</p>\r\n          <a href=\"/add-edit-inventory\" className=\"btn btn-primary\">Add/ Edit</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"col-xl-3 col-md-6\">\r\n      <div className=\"card\">\r\n        <img className=\"card-img-top\" src={Meat} alt=\"Card image cap\" />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Meat</h5>\r\n          <p className=\"card-text\">Manage your meat stock</p>\r\n          <a href=\"/add-edit-inventory\" className=\"btn btn-primary\">Add/ Edit</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"col-xl-3 col-md-6\">\r\n      <div className=\"card\">\r\n        <img className=\"card-img-top\" src={Medicine} alt=\"Card image cap\" />\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">Medicine</h5>\r\n          <p className=\"card-text\">Manage your medicines stock</p>\r\n          <a href=\"/add-edit-inventory\" className=\"btn btn-primary\">Add/ Edit</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default memo(InventoryCardPanel);\r\n","import React, { Component } from 'react';\r\n\r\nimport SidePanel from '../components/SidePanel';\r\nimport InventoryGraphicalPanel from '../components/InventoryGraphicalPanel';\r\nimport InventoryCardPanel from '../components/InventoryCardPanel';\r\n\r\nclass Dasboard extends Component {\r\n\r\n\trender = () => {\r\n\t\treturn (\r\n\t\t\t<div id=\"layoutSidenav\">\r\n\t\t\t\t<SidePanel />\r\n\t\t\t\t<div id=\"layoutSidenav_content\">\r\n\t\t\t\t\t<main>\r\n\t\t\t\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t\t\t\t<h4 className=\"mt-4\">Overview</h4>\r\n\t\t\t\t\t\t\t<InventoryGraphicalPanel />\r\n\t\t\t\t\t\t\t<InventoryCardPanel />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Dasboard;\r\n","import React, { Component } from 'react';\r\n\r\nclass AddEditInventory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            x: [\r\n                {\r\n                    \"item\": \"eggs\",\r\n                    \"monthly\": \"25\",\r\n                    \"stock\": \"30\"\r\n                },\r\n                {\r\n                    \"item\": \"pulses\",\r\n                    \"monthly\": \"25\",\r\n                    \"stock\": \"30\"\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    addNewRow = () => {\r\n        const newRow = {\r\n            \"item\": \"\",\r\n            \"monthly\": \"\",\r\n            \"stock\": \"\"\r\n        };\r\n        this.setState(prevState => ({\r\n            x: [...prevState.x, newRow]\r\n        }));\r\n    }\r\n\r\n    deleteRow = (rowIndex) => {\r\n        const updatedArray = [...this.state.x];\r\n        updatedArray.splice(rowIndex, 1);\r\n        this.setState({ x: updatedArray });\r\n    }\r\n\r\n    editData = (field, index, fieldValue) => {\r\n        this.setState(prevState => {\r\n            const newItems = [...prevState.x];\r\n            newItems[index][field] = fieldValue;\r\n            return { x: newItems };\r\n        })\r\n    }\r\n\r\n    render = () => {\r\n        const { x } = this.state;\r\n        return (\r\n            <div className=\"container-fluid add-edit-panel\">\r\n                <div className=\"row\">\r\n                    <a className=\"nav-link\" href=\"/dashboard\"> Go Back</a>\r\n                </div>\r\n                <h4 className=\"mt-4\">Add/ Edit the inventories</h4>\r\n                <div className=\"row\">\r\n                    <table className=\"table table-sm\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Item</th>\r\n                                <th scope=\"col\">Monthly consumption (kg)</th>\r\n                                <th scope=\"col\">Current Stock (kg)</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                x.map((n, i) => {\r\n                                    return (\r\n                                        <tr key={i}>\r\n                                            <th scope=\"row\">{i + 1}</th>\r\n                                            <td><input type=\"text\" className=\"form-control\" aria-label=\"Item Name\" aria-describedby=\"inputGroup-sizing-sm\" value={n.item} onChange={(e) => this.editData('item', i, e.target.value)} /></td>\r\n                                            <td><input type=\"text\" className=\"form-control\" aria-label=\"Item monthly usage\" aria-describedby=\"inputGroup-sizing-sm\" value={n.monthly} onChange={() => this.editData('monthly', i)} /></td>\r\n                                            <td><input type=\"text\" className=\"form-control\" aria-label=\"Item in Stock\" aria-describedby=\"inputGroup-sizing-sm\" value={n.stock} onChange={() => this.editData('stock', i)} /></td>\r\n                                            <td>\r\n                                                {(i === x.length - 1) && (\r\n                                                    <button\r\n                                                        type=\"button\"\r\n                                                        className=\"btn btn-success\"\r\n                                                        onClick={this.addNewRow}\r\n                                                    >\r\n                                                        <i className=\"fas fa-plus\" />\r\n                                                    </button>\r\n                                                )}\r\n                                                <button type=\"button\" className=\"btn btn btn-danger\" onClick={() => this.deleteRow(i)}>\r\n                                                    <i className=\"far fa-trash-alt\" />\r\n                                                </button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    How often do you want the notification? <button type=\"button\" class=\"btn btn-primary btn-sm\">Weekly</button> <button type=\"button\" class=\"btn btn-primary btn-sm\">Monthly</button>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddEditInventory;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport Radium, { StyleRoot } from 'radium';\r\n\r\nimport Header from '../components/Header/index';\r\nimport Footer from '../components/Footer';\r\nimport Dashboard from './Dashboard';\r\nimport AddEditInventories from './AddEditInventories';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  render = () => {\r\n    const loggedIn = true;\r\n    return (\r\n      <StyleRoot>\r\n        <center>\r\n          <Header />\r\n          <Router>\r\n            <Switch>\r\n              <Route\r\n                path=\"/dashboard\"\r\n              >\r\n                <Dashboard />\r\n              </Route>\r\n              <Route \r\n                exact\r\n                path=\"/add-edit-inventory\"\r\n              >\r\n                <AddEditInventories />\r\n              </Route>\r\n              <Route exact path=\"/\" render={() => (\r\n                loggedIn ? (\r\n                  <Redirect to=\"/dashboard\"/>\r\n                ) : (\r\n                  <Redirect to=\"/login\"/>\r\n                )\r\n              )}/>\r\n            </Switch>\r\n          </Router>\r\n          <Footer />       \r\n        </center>\r\n      </StyleRoot>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Radium(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\n/* import App from './AppPractice1'; */\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/grocery.9d681c36.jpg\";","module.exports = __webpack_public_path__ + \"static/media/meat.293accea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vegetables.9624600a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/medicine.1ac447c0.jpg\";"],"sourceRoot":""}